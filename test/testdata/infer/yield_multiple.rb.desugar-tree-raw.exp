ClassDef{
  kind = class
  name = EmptyTree<<C <U <root>>>>
  ancestors = []
  rhs = [
    Send{
      recv = Local{
        localVariable = <U <self>>
      }
      fun = <U extend>
      block = nullptr
      args = [
        UnresolvedConstantLit{
          scope = UnresolvedConstantLit{
            scope = EmptyTree
            cnst = <C <U T>>
          }
          cnst = <C <U Sig>>
        }
      ]
    }

    Send{
      recv = Local{
        localVariable = <U <self>>
      }
      fun = <U sig>
      block = Block {
        args = [
        ]
        body = Send{
          recv = Send{
            recv = Local{
              localVariable = <U <self>>
            }
            fun = <U params>
            block = nullptr
            args = [
              Hash{
                pairs = [
                  [
                    key = Literal{ value = :"blk" }
                    value = Send{
                      recv = Send{
                        recv = Send{
                          recv = UnresolvedConstantLit{
                            scope = EmptyTree
                            cnst = <C <U T>>
                          }
                          fun = <U proc>
                          block = nullptr
                          args = [
                          ]
                        }
                        fun = <U params>
                        block = nullptr
                        args = [
                          Hash{
                            pairs = [
                              [
                                key = Literal{ value = :"x" }
                                value = UnresolvedConstantLit{
                                  scope = EmptyTree
                                  cnst = <C <U Integer>>
                                }
                              ]
                              [
                                key = Literal{ value = :"y" }
                                value = UnresolvedConstantLit{
                                  scope = EmptyTree
                                  cnst = <C <U Symbol>>
                                }
                              ]
                            ]
                          }
                        ]
                      }
                      fun = <U returns>
                      block = nullptr
                      args = [
                        UnresolvedConstantLit{
                          scope = EmptyTree
                          cnst = <C <U Integer>>
                        }
                      ]
                    }
                  ]
                ]
              }
            ]
          }
          fun = <U void>
          block = nullptr
          args = [
          ]
        }
      }
      args = [
      ]
    }

    MethodDef{
      flags = 0
      name = <U yield_two><<C <U <todo sym>>>>
      args = [BlockArg{ expr = UnresolvedIdent{
          kind = Local
          name = <U blk>
        } }]
      rhs = InsSeq{
        stats = [
          Send{
            recv = UnresolvedIdent{
              kind = Local
              name = <U blk>
            }
            fun = <U call>
            block = nullptr
            args = [
              Literal{ value = 1 }
              Literal{ value = :"hi" }
            ]
          }
        ],
        expr = Send{
          recv = UnresolvedIdent{
            kind = Local
            name = <U blk>
          }
          fun = <U call>
          block = nullptr
          args = [
            Literal{ value = 1 }
            Literal{ value = :"hi" }
          ]
        }
      }
    }
  ]
}
