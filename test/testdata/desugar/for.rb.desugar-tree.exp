class <emptyTree><<C <root>>> < ()
  class <emptyTree>::<C A><<C <todo sym>>> < (::<todo sym>)
    def self.each<<C <todo sym>>>(&<blk>)
      begin
        <blk>.call(1, 2, 3, 4, 5)
        <blk>.call(6, 7, 8, 9, 0)
      end
    end
  end

  class <emptyTree>::<C E><<C <todo sym>>> < (::<todo sym>)
    def self.e=<<C <todo sym>>>(e, &<blk>)
      @e = e
    end

    def self.e<<C <todo sym>>>(&<blk>)
      @e
    end
  end

  class <emptyTree>::<C Main><<C <todo sym>>> < (::<todo sym>)
    def self.main<<C <todo sym>>>(&<blk>)
      begin
        <emptyTree>::<C A>.each() do |*forTemp$2|
          begin
            begin
              <assignTemp>$3 = forTemp$2
              <assignTemp>$4 = ::<Magic>.<expand-splat>(<assignTemp>$3, 1, 0)
              a = <assignTemp>$4.[](0)
              <assignTemp>$3
            end
            <self>.puts(a.inspect())
          end
        end
        <emptyTree>::<C A>.each() do |*forTemp|
          begin
            begin
              <assignTemp>$5 = forTemp.to_a()
              <assignTemp>$6 = ::<Magic>.<expand-splat>(<assignTemp>$5, 1, 0)
              a = <assignTemp>$6.[](0)
              <assignTemp>$5
            end
            <self>.puts(a.inspect())
          end
        end
        <emptyTree>::<C A>.each() do |*forTemp$7|
          begin
            begin
              <assignTemp>$8 = forTemp$7
              <assignTemp>$9 = ::<Magic>.<expand-splat>(<assignTemp>$8, 2, 0)
              a = <assignTemp>$9.[](0)
              b = <assignTemp>$9.[](1)
              <assignTemp>$8
            end
            begin
              <self>.puts(a.inspect())
              <self>.puts(b.inspect())
            end
          end
        end
        <emptyTree>::<C A>.each() do |*forTemp|
          begin
            begin
              <assignTemp>$10 = forTemp.to_a()
              <assignTemp>$11 = ::<Magic>.<expand-splat>(<assignTemp>$10, 2, 0)
              a = <assignTemp>$11.[](0)
              b = <assignTemp>$11.[](1)
              <assignTemp>$10
            end
            <self>.puts(a.inspect())
            <self>.puts(b.inspect())
          end
        end
        <self>.puts("main")
        <emptyTree>::<C A>.each() do |*forTemp$12|
          begin
            begin
              <assignTemp>$13 = forTemp$12
              <assignTemp>$14 = ::<Magic>.<expand-splat>(<assignTemp>$13, 5, 0)
              @a = <assignTemp>$14.[](0)
              @@b = <assignTemp>$14.[](1)
              $c = <assignTemp>$14.[](2)
              d = <assignTemp>$14.[](3)
              <emptyTree>::<C E>.e=(<assignTemp>$14.[](4))
              <assignTemp>$13
            end
            begin
              <self>.puts(@a.inspect())
              <self>.puts(@@b.inspect())
              <self>.puts($c.inspect())
              <self>.puts(d.inspect())
              <self>.puts(<emptyTree>::<C E>.e().inspect())
            end
          end
        end
        <emptyTree>::<C A>.each() do |*forTemp|
          begin
            begin
              <assignTemp>$15 = forTemp.to_a()
              <assignTemp>$16 = ::<Magic>.<expand-splat>(<assignTemp>$15, 5, 0)
              @a = <assignTemp>$16.[](0)
              @@b = <assignTemp>$16.[](1)
              $c = <assignTemp>$16.[](2)
              d = <assignTemp>$16.[](3)
              <emptyTree>::<C E>.e=(<assignTemp>$16.[](4))
              <assignTemp>$15
            end
            <self>.puts(@a.inspect())
            <self>.puts(@@b.inspect())
            <self>.puts($c.inspect())
            <self>.puts(d.inspect())
            <self>.puts(<emptyTree>::<C E>.e().inspect())
          end
        end
      end
    end
  end

  <emptyTree>::<C Main>.main()
end
